{"ast":null,"code":"// src/api/service.js\n\nimport axios from \"axios\";\nconst api = axios.create({\n  // make sure you use PORT = 5005 (the port where our server is running)\n\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5005\"\n\n  // withCredentials: true // => you might need this option if using cookies and sessions\n});\n\nconst errorHandler = err => {\n  throw err;\n};\nconst getRecipes = () => {\n  const storedToken = localStorage.getItem('authToken');\n  return api.get(\"/api/recipes\", {\n    headers: {\n      Authorization: `Bearer ${storedToken}`\n    }\n  }).then(res => res.data).catch(errorHandler);\n};\nconst uploadImage = file => {\n  const storedToken = localStorage.getItem('authToken');\n  return api.post(\"/api/upload\", file, {\n    headers: {\n      Authorization: `Bearer ${storedToken}`\n    }\n  }).then(res => res.data).catch(errorHandler);\n};\nconst createRecipe = newRecipe => {\n  const storedToken = localStorage.getItem('authToken');\n  return api.post(\"/api/recipes\", newRecipe, {\n    headers: {\n      Authorization: `Bearer ${storedToken}`\n    }\n  }).then(res => res.data).catch(errorHandler);\n};\nexport default {\n  getRecipes,\n  uploadImage,\n  createRecipe\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","errorHandler","err","getRecipes","storedToken","localStorage","getItem","get","headers","Authorization","then","res","data","catch","uploadImage","file","post","createRecipe","newRecipe"],"sources":["/Users/jessica/Desktop/Portfolio/Dyner/client/src/api/service.js"],"sourcesContent":["// src/api/service.js\n \nimport axios from \"axios\";\n \nconst api = axios.create({\n  // make sure you use PORT = 5005 (the port where our server is running)\n\n\n    baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5005\"\n\n\n  // withCredentials: true // => you might need this option if using cookies and sessions\n});\n \nconst errorHandler = (err) => {\n  throw err;\n};\n \nconst getRecipes = () => {\n  const storedToken = localStorage.getItem('authToken');\n\n  return api.get(\"/api/recipes\", { headers: { Authorization: `Bearer ${storedToken}` } })\n    .then((res) => res.data)\n    .catch(errorHandler);\n};\n \nconst uploadImage = (file) => {\n  const storedToken = localStorage.getItem('authToken');\n\n  return api.post(\"/api/upload\", file, { headers: { Authorization: `Bearer ${storedToken}` } })\n    .then(res => res.data)\n    .catch(errorHandler);\n};\n \nconst createRecipe = (newRecipe) => {\n  const storedToken = localStorage.getItem('authToken');\n\n  return api.post(\"/api/recipes\", newRecipe, { headers: { Authorization: `Bearer ${storedToken}` } })\n    .then(res => res.data)\n    .catch(errorHandler);\n};\n \nexport default {\n  getRecipes,\n  uploadImage,\n  createRecipe,\n};"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvB;;EAGEC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;;EAG5C;AACF,CAAC,CAAC;;AAEF,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAC5B,MAAMA,GAAG;AACX,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAErD,OAAOX,GAAG,CAACY,GAAG,CAAC,cAAc,EAAE;IAAEC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASL,WAAY;IAAE;EAAE,CAAC,CAAC,CACpFM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CACvBC,KAAK,CAACZ,YAAY,CAAC;AACxB,CAAC;AAED,MAAMa,WAAW,GAAIC,IAAI,IAAK;EAC5B,MAAMX,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAErD,OAAOX,GAAG,CAACqB,IAAI,CAAC,aAAa,EAAED,IAAI,EAAE;IAAEP,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASL,WAAY;IAAE;EAAE,CAAC,CAAC,CAC1FM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrBC,KAAK,CAACZ,YAAY,CAAC;AACxB,CAAC;AAED,MAAMgB,YAAY,GAAIC,SAAS,IAAK;EAClC,MAAMd,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAErD,OAAOX,GAAG,CAACqB,IAAI,CAAC,cAAc,EAAEE,SAAS,EAAE;IAAEV,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASL,WAAY;IAAE;EAAE,CAAC,CAAC,CAChGM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CACrBC,KAAK,CAACZ,YAAY,CAAC;AACxB,CAAC;AAED,eAAe;EACbE,UAAU;EACVW,WAAW;EACXG;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}